{"ast":null,"code":"import * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({\n  passive: false\n});\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\n\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\n\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\n\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\n\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\n\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\n\nclass MatSliderChange {} // Boilerplate for applying mixins to MatSlider.\n\n/** @docs-private */\n\n\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n\n\nclass MatSlider extends _MatSliderBase {\n  constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n    super(elementRef);\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._animationMode = _animationMode;\n    this._invert = false;\n    this._max = 100;\n    this._min = 0;\n    this._step = 1;\n    this._thumbLabel = false;\n    this._tickInterval = 0;\n    this._value = null;\n    this._vertical = false;\n    /** Event emitted when the slider value has changed. */\n\n    this.change = new EventEmitter();\n    /** Event emitted when the slider thumb moves. */\n\n    this.input = new EventEmitter();\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n\n    this.valueChange = new EventEmitter();\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n\n    this.onTouched = () => {};\n\n    this._percent = 0;\n    /**\n     * Whether or not the thumb is sliding and what the user is using to slide it with.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     */\n\n    this._isSliding = null;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     */\n\n    this._isActive = false;\n    /** The size of a tick interval as a percentage of the size of the track. */\n\n    this._tickIntervalPercent = 0;\n    /** The dimensions of the slider. */\n\n    this._sliderDimensions = null;\n\n    this._controlValueAccessorChangeFn = () => {};\n    /** Subscription to the Directionality change EventEmitter. */\n\n\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Called when the user has put their pointer down on the slider. */\n\n    this._pointerDown = event => {\n      // Don't do anything if the slider is disabled or the\n      // user is using anything other than the main mouse button.\n      if (this.disabled || this._isSliding || !isTouchEvent(event) && event.button !== 0) {\n        return;\n      }\n\n      this._ngZone.run(() => {\n        this._touchId = isTouchEvent(event) ? getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n        const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n\n        if (pointerPosition) {\n          const oldValue = this.value;\n          this._isSliding = 'pointer';\n          this._lastPointerEvent = event;\n          event.preventDefault();\n\n          this._focusHostElement();\n\n          this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n\n\n          this._bindGlobalEvents(event);\n\n          this._focusHostElement();\n\n          this._updateValueFromPosition(pointerPosition);\n\n          this._valueOnSlideStart = oldValue; // Emit a change and input event if the value changed.\n\n          if (oldValue != this.value) {\n            this._emitInputEvent();\n          }\n        }\n      });\n    };\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     */\n\n\n    this._pointerMove = event => {\n      if (this._isSliding === 'pointer') {\n        const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n\n        if (pointerPosition) {\n          // Prevent the slide from selecting anything else.\n          event.preventDefault();\n          const oldValue = this.value;\n          this._lastPointerEvent = event;\n\n          this._updateValueFromPosition(pointerPosition); // Native range elements always emit `input` events when the value changed while sliding.\n\n\n          if (oldValue != this.value) {\n            this._emitInputEvent();\n          }\n        }\n      }\n    };\n    /** Called when the user has lifted their pointer. Bound on the document level. */\n\n\n    this._pointerUp = event => {\n      if (this._isSliding === 'pointer') {\n        if (!isTouchEvent(event) || typeof this._touchId !== 'number' || // Note that we use `changedTouches`, rather than `touches` because it\n        // seems like in most cases `touches` is empty for `touchend` events.\n        findMatchingTouch(event.changedTouches, this._touchId)) {\n          event.preventDefault();\n\n          this._removeGlobalEvents();\n\n          this._isSliding = null;\n          this._touchId = undefined;\n\n          if (this._valueOnSlideStart != this.value && !this.disabled) {\n            this._emitChangeEvent();\n          }\n\n          this._valueOnSlideStart = this._lastPointerEvent = null;\n        }\n      }\n    };\n    /** Called when the window has lost focus. */\n\n\n    this._windowBlur = () => {\n      // If the window is blurred while dragging we need to stop dragging because the\n      // browser won't dispatch the `mouseup` and `touchend` events anymore.\n      if (this._lastPointerEvent) {\n        this._pointerUp(this._lastPointerEvent);\n      }\n    };\n\n    this._document = _document;\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    _ngZone.runOutsideAngular(() => {\n      const element = elementRef.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n  /** Whether the slider is inverted. */\n\n\n  get invert() {\n    return this._invert;\n  }\n\n  set invert(value) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  /** The maximum value that the slider can have. */\n\n\n  get max() {\n    return this._max;\n  }\n\n  set max(v) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The minimum value that the slider can have. */\n\n\n  get min() {\n    return this._min;\n  }\n\n  set min(v) {\n    this._min = coerceNumberProperty(v, this._min);\n    this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The values at which the thumb will snap. */\n\n\n  get step() {\n    return this._step;\n  }\n\n  set step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop().length;\n    } // Since this could modify the label, we need to notify the change detection.\n\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Whether or not to show the thumb label. */\n\n\n  get thumbLabel() {\n    return this._thumbLabel;\n  }\n\n  set thumbLabel(value) {\n    this._thumbLabel = coerceBooleanProperty(value);\n  }\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n\n\n  get tickInterval() {\n    return this._tickInterval;\n  }\n\n  set tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  /** Value of the slider. */\n\n\n  get value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n\n    return this._value;\n  }\n\n  set value(v) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v, 0); // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n\n      if (this._roundToDecimal && value !== this.min && value !== this.max) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value); // Since this also modifies the percentage, we need to let the change detection know.\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the slider is vertical. */\n\n\n  get vertical() {\n    return this._vertical;\n  }\n\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /** The value to be used for display purposes. */\n\n\n  get displayValue() {\n    if (this.displayWith) {\n      // Value is never null but since setters and getters cannot have\n      // different types, the value getter is also typed to return null.\n      return this.displayWith(this.value);\n    } // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n\n\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n  /** set focus to the host element */\n\n\n  focus(options) {\n    this._focusHostElement(options);\n  }\n  /** blur the host element */\n\n\n  blur() {\n    this._blurHostElement();\n  }\n  /** The percentage of the slider that coincides with the value. */\n\n\n  get percent() {\n    return this._clamp(this._percent);\n  }\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n\n\n  _shouldInvertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n  /** Whether the slider is at its minimum value. */\n\n\n  _isMinValue() {\n    return this.percent === 0;\n  }\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n\n\n  _getThumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n\n    if (this._isMinValue() && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n\n    return 0;\n  }\n  /** CSS styles for the track background element. */\n\n\n  _getTrackBackgroundStyles() {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n    };\n  }\n  /** CSS styles for the track fill element. */\n\n\n  _getTrackFillStyles() {\n    const percent = this.percent;\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n      // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n      // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n      // the value of the slider is 0, we can easily get into this situation. We force a\n      // recalculation by changing the element's `display` when it goes from 0 to any other value.\n      display: percent === 0 ? 'none' : ''\n    };\n  }\n  /** CSS styles for the ticks container element. */\n\n\n  _getTicksContainerStyles() {\n    let axis = this.vertical ? 'Y' : 'X'; // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n  /** CSS styles for the ticks element. */\n\n\n  _getTicksStyles() {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X'; // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue() && this._getThumbGap()) {\n      const shouldInvertAxis = this._shouldInvertAxis();\n\n      let side;\n\n      if (this.vertical) {\n        side = shouldInvertAxis ? 'Bottom' : 'Top';\n      } else {\n        side = shouldInvertAxis ? 'Right' : 'Left';\n      }\n\n      styles[`padding${side}`] = `${this._getThumbGap()}px`;\n    }\n\n    return styles;\n  }\n\n  _getThumbContainerStyles() {\n    const shouldInvertAxis = this._shouldInvertAxis();\n\n    let axis = this.vertical ? 'Y' : 'X'; // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n\n    let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n\n\n  _shouldInvertMouseCoords() {\n    const shouldInvertAxis = this._shouldInvertAxis();\n\n    return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n  }\n  /** The language direction for this slider element. */\n\n\n  _getDirection() {\n    return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      this._isActive = !!origin && origin !== 'keyboard';\n\n      this._changeDetectorRef.detectChanges();\n    });\n\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    this._lastPointerEvent = null;\n\n    this._removeGlobalEvents();\n\n    this._focusMonitor.stopMonitoring(this._elementRef);\n\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    } // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n\n\n    this._sliderDimensions = this._getSliderDimensions();\n\n    this._updateTickIntervalPercent();\n  }\n\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n\n    this._updateTickIntervalPercent();\n  }\n\n  _onBlur() {\n    this.onTouched();\n  }\n\n  _onKeydown(event) {\n    if (this.disabled || hasModifierKey(event) || this._isSliding && this._isSliding !== 'keyboard') {\n      return;\n    }\n\n    const oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n\n        break;\n\n      case PAGE_DOWN:\n        this._increment(-10);\n\n        break;\n\n      case END:\n        this.value = this.max;\n        break;\n\n      case HOME:\n        this.value = this.min;\n        break;\n\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n\n        break;\n\n      case UP_ARROW:\n        this._increment(1);\n\n        break;\n\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n\n        break;\n\n      case DOWN_ARROW:\n        this._increment(-1);\n\n        break;\n\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = 'keyboard';\n    event.preventDefault();\n  }\n\n  _onKeyup() {\n    if (this._isSliding === 'keyboard') {\n      this._isSliding = null;\n    }\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n\n\n  _getWindow() {\n    return this._document.defaultView || window;\n  }\n  /**\n   * Binds our global move and end events. They're bound at the document level and only while\n   * dragging so that the user doesn't have to keep their pointer exactly over the slider\n   * as they're swiping across the screen.\n   */\n\n\n  _bindGlobalEvents(triggerEvent) {\n    // Note that we bind the events to the `document`, because it allows us to capture\n    // drag cancel events where the user's pointer is outside the browser window.\n    const document = this._document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n    document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n    if (isTouch) {\n      document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n  /** Removes any global event listeners that we may have added. */\n\n\n  _removeGlobalEvents() {\n    const document = this._document;\n    document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n  /** Increments the slider by the given number of steps (negative number decrements). */\n\n\n  _increment(numSteps) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n\n\n  _updateValueFromPosition(pos) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x; // The exact value is calculated from the event and used to find the closest snap value.\n\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    } // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n\n\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent); // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n\n\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min; // The value needs to snap to the min and max.\n\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n  /** Emits a change event if the current value is different from the last emitted value. */\n\n\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n  /** Emits an input event when the current value is different from the last emitted value. */\n\n\n  _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n\n\n  _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n  /** Creates a slider change object from the specified value. */\n\n\n  _createChangeEvent(value = this.value) {\n    let event = new MatSliderChange();\n    event.source = this;\n    event.value = value;\n    return event;\n  }\n  /** Calculates the percentage of the slider that a value is. */\n\n\n  _calculatePercentage(value) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n  /** Calculates the value a percentage of the slider corresponds to. */\n\n\n  _calculateValue(percentage) {\n    return this.min + percentage * (this.max - this.min);\n  }\n  /** Return a number between two numbers. */\n\n\n  _clamp(value, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n\n\n  _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n\n\n  _focusHostElement(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Blurs the native element. */\n\n\n  _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n\n\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n\n\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n}\n\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatSlider.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"],\n  hostVars: 29,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      })(\"blur\", function MatSlider_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"keyup\", function MatSlider_keyup_HostBindingHandler() {\n        return ctx._onKeyup();\n      })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      i0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    invert: \"invert\",\n    max: \"max\",\n    min: \"min\",\n    step: \"step\",\n    thumbLabel: \"thumbLabel\",\n    tickInterval: \"tickInterval\",\n    value: \"value\",\n    displayWith: \"displayWith\",\n    valueText: \"valueText\",\n    vertical: \"vertical\"\n  },\n  outputs: {\n    change: \"change\",\n    input: \"input\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [i0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelement(6, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.displayValue);\n    }\n  },\n  dependencies: [i3.NgStyle],\n  styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      exportAs: 'matSlider',\n      providers: [MAT_SLIDER_VALUE_ACCESSOR],\n      host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        // On Safari starting to slide temporarily triggers text selection mode which\n        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n        '(selectstart)': '$event.preventDefault()',\n        'class': 'mat-slider mat-focus-indicator',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n        // to the same value that we set on the slider's thumb which will be truncated.\n        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if mouse coordinates need to be inverted.\n        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue()',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      inputs: ['disabled', 'color', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.FocusMonitor\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    invert: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    thumbLabel: [{\n      type: Input\n    }],\n    tickInterval: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    valueText: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    input: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _sliderWrapper: [{\n      type: ViewChild,\n      args: ['sliderWrapper']\n    }]\n  });\n})();\n/** Returns whether an event is a touch event. */\n\n\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\n\n\nfunction getPointerPositionOnPage(event, id) {\n  let point;\n\n  if (isTouchEvent(event)) {\n    // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n    // If that's the case, attribute the first touch to all active sliders. This should still cover\n    // the most common case while only breaking multi-touch.\n    if (typeof id === 'number') {\n      point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n    } else {\n      // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n      point = event.touches[0] || event.changedTouches[0];\n    }\n  } else {\n    point = event;\n  }\n\n  return point ? {\n    x: point.clientX,\n    y: point.clientY\n  } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\n\n\nfunction findMatchingTouch(touches, id) {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n\n  return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\n\n\nfunction getTouchIdForSlider(event, sliderHost) {\n  for (let i = 0; i < event.touches.length; i++) {\n    const target = event.touches[i].target;\n\n    if (sliderHost === target || sliderHost.contains(target)) {\n      return event.touches[i].identifier;\n    }\n  }\n\n  return undefined;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatSliderModule {}\n\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\n\nMatSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatSlider, MatCommonModule],\n      declarations: [MatSlider]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };","map":{"version":3,"names":["i3","DOCUMENT","CommonModule","i0","forwardRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Attribute","Inject","Input","Output","ViewChild","NgModule","mixinTabIndex","mixinColor","mixinDisabled","MatCommonModule","i1","i2","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","DOWN_ARROW","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","HOME","END","PAGE_DOWN","PAGE_UP","NG_VALUE_ACCESSOR","ANIMATION_MODULE_TYPE","normalizePassiveListenerOptions","Subscription","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","_MatSliderBase","constructor","_elementRef","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_ngZone","_document","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","event","disabled","isTouchEvent","button","run","_touchId","getTouchIdForSlider","nativeElement","undefined","pointerPosition","getPointerPositionOnPage","oldValue","value","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","runOutsideAngular","element","addEventListener","invert","max","v","_calculatePercentage","markForCheck","min","step","_roundToDecimal","toString","split","pop","length","thumbLabel","tickInterval","parseFloat","toFixed","vertical","displayValue","displayWith","focus","options","blur","_blurHostElement","percent","_clamp","_shouldInvertAxis","_isMinValue","_getThumbGap","_getTrackBackgroundStyles","axis","scale","sign","_shouldInvertMouseCoords","transform","_getTrackFillStyles","display","_getTicksContainerStyles","_getDirection","offset","_getTicksStyles","tickSize","backgroundSize","rotate","styles","shouldInvertAxis","side","_getThumbContainerStyles","invertOffset","ngAfterViewInit","monitor","subscribe","origin","detectChanges","ngOnDestroy","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","_onFocus","_onBlur","_onKeydown","keyCode","_increment","_onKeyup","_getWindow","defaultView","window","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","pos","top","left","size","height","width","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","getBoundingClientRect","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ɵfac","ElementRef","FocusMonitor","ChangeDetectorRef","Directionality","NgZone","ɵcmp","NgStyle","type","args","selector","exportAs","providers","host","inputs","encapsulation","None","changeDetection","OnPush","template","decorators","valueText","id","point","touches","clientX","clientY","i","identifier","sliderHost","target","contains","MatSliderModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/122833/Documents/4. Semester/ssrf/SSRF-Frontend/node_modules/@angular/material/fesm2020/slider.mjs"],"sourcesContent":["import * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true,\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event)\n                    ? getTouchIdForSlider(event, this._elementRef.nativeElement)\n                    : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    event.preventDefault();\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) ||\n                    typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    event.preventDefault();\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() {\n        return this._invert;\n    }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() {\n        return this._thumbLabel;\n    }\n    set thumbLabel(value) {\n        this._thumbLabel = coerceBooleanProperty(value);\n    }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() {\n        return this._tickInterval;\n    }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() {\n        return this._clamp(this._percent);\n    }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : '',\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = (this._tickIntervalPercent / 2) * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`,\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`,\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`,\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled ||\n            hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = (trackSize * this.step) / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = (this.tickInterval * this.step) / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: MatSlider, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }, { token: 'tabindex', attribute: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", type: MatSlider, selector: \"mat-slider\", inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", displayWith: \"displayWith\", valueText: \"valueText\", vertical: \"vertical\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"slider\" }, listeners: { \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\", \"keyup\": \"_onKeyup()\", \"mouseenter\": \"_onMouseenter()\", \"selectstart\": \"$event.preventDefault()\" }, properties: { \"tabIndex\": \"tabIndex\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuemin\": \"min\", \"attr.aria-valuenow\": \"value\", \"attr.aria-valuetext\": \"valueText == null ? displayValue : valueText\", \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-slider-disabled\": \"disabled\", \"class.mat-slider-has-ticks\": \"tickInterval\", \"class.mat-slider-horizontal\": \"!vertical\", \"class.mat-slider-axis-inverted\": \"_shouldInvertAxis()\", \"class.mat-slider-invert-mouse-coords\": \"_shouldInvertMouseCoords()\", \"class.mat-slider-sliding\": \"_isSliding\", \"class.mat-slider-thumb-label-showing\": \"thumbLabel\", \"class.mat-slider-vertical\": \"vertical\", \"class.mat-slider-min-value\": \"_isMinValue()\", \"class.mat-slider-hide-last-tick\": \"disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-slider mat-focus-indicator\" }, providers: [MAT_SLIDER_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_sliderWrapper\", first: true, predicate: [\"sliderWrapper\"], descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], directives: [{ type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', exportAs: 'matSlider', providers: [MAT_SLIDER_VALUE_ACCESSOR], host: {\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                        '(keyup)': '_onKeyup()',\n                        '(mouseenter)': '_onMouseenter()',\n                        // On Safari starting to slide temporarily triggers text selection mode which\n                        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                        '(selectstart)': '$event.preventDefault()',\n                        'class': 'mat-slider mat-focus-indicator',\n                        'role': 'slider',\n                        '[tabIndex]': 'tabIndex',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuemin]': 'min',\n                        '[attr.aria-valuenow]': 'value',\n                        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                        // to the same value that we set on the slider's thumb which will be truncated.\n                        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-slider-disabled]': 'disabled',\n                        '[class.mat-slider-has-ticks]': 'tickInterval',\n                        '[class.mat-slider-horizontal]': '!vertical',\n                        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if mouse coordinates need to be inverted.\n                        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                        '[class.mat-slider-sliding]': '_isSliding',\n                        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                        '[class.mat-slider-vertical]': 'vertical',\n                        '[class.mat-slider-min-value]': '_isMinValue()',\n                        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, inputs: ['disabled', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { invert: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], thumbLabel: [{\n                type: Input\n            }], tickInterval: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }], valueText: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], input: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _sliderWrapper: [{\n                type: ViewChild,\n                args: ['sliderWrapper']\n            }] } });\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: MatSliderModule, declarations: [MatSlider], imports: [CommonModule, MatCommonModule], exports: [MatSlider, MatCommonModule] });\nMatSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: MatSliderModule, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSlider, MatCommonModule],\n                    declarations: [MatSlider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}